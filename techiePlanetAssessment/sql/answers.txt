-- Question 1 --
-- SELECT DISTINCT salary FROM emp ORDER BY salary DESC OFFSET 1 LIMIT 1;
SELECT MAX(salary) FROM emp WHERE salary < (SELECT MAX(salary) FROM emp); -- 2

SELECT salary FROM (SELECT DISTINCT salary FROM emp ORDER BY salary DESC LIMIT 2) AS emp ORDER BY salary LIMIT 1; -- 3

-- SELECT DISTINCT salary FROM (SELECT salary FROM emp ORDER BY salary DESC LIMIT 2) AS emp ORDER BY salary LIMIT 1;

-- SELECT salary FROM emp ORDER BY salary DESC OFFSET 1 LIMIT 1;

-- Question 2 --

SELECT `games`.`yr` as yr, `city`.`country` as country FROM `games` LEFT JOIN `city` ON `games`.`city` = `city`.`name`;


-- Question 3 --

SELECT `games`.`yr` as yr, `city`.`country` as country FROM `games` LEFT JOIN `city` ON `games`.`city` = `city`.`name` WHERE `games`.`id` > 2;
SELECT `games`.`yr` as yr, `city`.`country` as country FROM `games` RIGHT JOIN `city` ON `games`.`city` = `city`.`name` WHERE `games`.`id` > 2;
-- LEFT JOIN would return all rows from the games table, corresponding country of city OR Null where there's no city
-- RIGHT JOIN would return all rows from the games table, except for where there's no city

-- Question 4 --
/* CREATE TABLE sessions (

id INTEGER NOT NULL PRIMARY KEY,

userId INTEGER NOT NULL,

duration DECIMAL NOT NULL

);
INSERT INTO sessions(id, userId, duration) VALUES(1, 1, 10);

INSERT INTO sessions(id, userId, duration) VALUES(2, 2, 18);

INSERT INTO sessions(id, userId, duration) VALUES(3, 1, 14); */


SELECT DISTINCT `userId` UserId, ROUND(AVG(`duration`))  AverageDuration FROM `sessions` GROUP BY `userId` HAVING count(userId) > 1;